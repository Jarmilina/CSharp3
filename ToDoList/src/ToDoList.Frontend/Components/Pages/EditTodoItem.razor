@using ToDoList.Frontend.Clients
@using ToDoList.Frontend.Views
@page "/editToDoItem/{ItemId:int}"
@inject IToDoItemsClient ToDoItemsClient
@inject NavigationManager NavigationManager
@rendermode InteractiveServer


<PageTitle>Edit ToDoItem</PageTitle>

@if (ToDoItem is not null)
{
    <EditForm Model="ToDoItem" FormName="EditToDoItem" OnSubmit="Submit">
        <InputText id="Name" @bind-Value="ToDoItem.Name" />
        <InputText id="Description" @bind-Value="ToDoItem.Description" />
        <InputText id="Category" @bind-Value="ToDoItem.Category" />
        <InputCheckbox id="IsCompleted" @bind-Value="ToDoItem.IsCompleted" />
        <button type="submit">Sumbit</button>
    </EditForm>

    @ToDoItem
}



@ItemId

@code
{
    protected override async Task OnInitializedAsync()
    {
        ToDoItem = await ToDoItemsClient.ReadItemByIdAsync(ItemId);
    }

    [Parameter]
    public int ItemId { get; set; }

    [SupplyParameterFromForm]
    public ToDoItemView ToDoItem { get; set; }

    public async Task Submit()
    {
        await ToDoItemsClient.UpdateItemAsync(ToDoItem);
        NavigationManager.NavigateTo("/");
    }
}
